{"version":3,"sources":["constants/index.js","rhlConfig.js","actions/gamesInformation.js","reducers/gamesInformation.js","actions/login.js","reducers/login.js","store/rootReducer.js","store/configureStore.js","serviceWorker.js","components/tabContainer/swipeableViewStyles.js","components/tabContainer/tabContainerStyles.js","components/tabContainer/tabContainer.js","components/labelTag/labelTagStyles.js","components/labelTag/labelTag.js","utilities/index.js","components/gameCard/gameCardStyles.js","components/gameCard/gameCard.js","components/catalog/catalogStyles.js","components/catalog/catalog.js","components/tabContainer/swipeableView.js","components/footer/footerStyles.js","components/footer/footer.js","components/importDrawer/importDrawerStyles.js","components/login/loginStyles.js","components/login/login.js","components/importDrawer/importDrawer.js","components/filterDrawer/filterDrawerStyles.js","components/filterDrawer/filterDrawer.js","components/navigator/navigatorStyles.js","components/navigator/navigator.js","routes/home/home.js","routes/app/App.js","index.js"],"names":["module","exports","CARD_OPACITY","CATALOG_TAB","FIRST_PAGE","IMPORT_DRAWER","FILTER_DRAWER","ITEMS_BY_PAGE","ERROR_IMAGE","WISHLIST_TAB","setConfig","ignoreSFC","pureRender","actions","createActions","initGames","source","dispatch","json","backup","allGames","get","slice","gamesLabels","labels","platforms","gamesWithLabels","map","game","gameLabels","filter","gameLabel","game_id","id","Object","assign","find","label","label_id","games","gamesInWishList","loadJsonInformation","response","getListByPage","page","load","start","hasMoreItems","length","gameInformationReducer","handleActions","_handleActions","defineProperty","state","action","merge","loading","sourceWishList","loadGamesInformation","_state$mergeDeep","mergeDeep","combineActions","shortDataByName","setInformationFilter","shortDataByNameSuccess","_state$merge","isCatalog","idLabelFilter","view","hasItems","asc","setInformationFilterSuccess","sourceFiltered","setTab","tab","resetFilteredValues","toggleDrawer","importFile","wishList","importDrawer","error","importFileError","Immutable","fromJS","filterDrawer","hasMoreItemsWishList","loginReducer","login_handleActions","loginSuccess","isAuthenticated","tokenId","loginFailure","logoutSuccess","rootReducer","combineReducers","gamesInformation","login","configureStore","middleware","thunk","reduxImmutableStateInvariant","createStore","applyMiddleware","apply","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","swipeableViewStyles","theme","root","backgroundColor","palette","background","paper","tabContainerStyles","padding","TabContainer","_this$props","this","props","classes","children","dir","react_default","a","createElement","core_index_es","component","className","Component","withStyles","labelTagStyles","chip","marginLeft","&:hover","fontWeight","boxShadow","drawerChip","width","seletedChip","LabelTag","_this","classCallCheck","_super","call","handleClickFilter","bind","assertThisInitialized","setLabelFilter","_classNames","_this$props2","isDrawer","labelSeleted","opacity","tagColor","num","concat","join","tagCodeToColor","background_color","classTag","classNames","style","onClick","key","name","clickable","gameCardStyles","card","height","display","flexDirection","cardMedia","paddingTop","cardContent","flexGrow","cardActions","flexWrap","marginBottom","textAlign","GameCard","imageSrc","image","loadLabelTag","checkImage","src","_this2","img","Image","onerror","e","setState","labelTag","description","title","plataform","plataformData","item","labelsData","in","subheader","noWrap","size","color","catalogStyles","heroUnit","heroContent","maxWidth","margin","spacing","unit","layout","marginRight","breakpoints","up","cardGrid","marginTop","footer","Catalog","xs","sm","md","lg","react_lazyload_lib_default","gameCard","idGame","items","loader","loadGames","react_infinite_scroller_default","pageStart","loadMore","hasMore","container","variant","align","gutterBottom","catalogContainer","buildLoader","buildItems","errorMessage","buildError","buildCatalog","Fragment","SwipeableView","handleChange","event","handleChangeIndex","params","propGames","propMoreItems","catalog_catalog","_this$props3","catalog","buildCatalogTab","buildWishListTab","axis","direction","position","value","onChange","indicatorColor","textColor","icon","icons_index_es","lib_default","index","onChangeIndex","tabContainer","withTheme","footerStyles","Footer","importDrawerStyles","listItem","input","labelFor","cursor","loginStyles","Login","checkUserAuthenticated","loginInformation","handleLoginSuccess","handleLoginFailure","buildLoginIcon","buildLogoutIcon","aria-label","react_fontawesome_index_es","renderProps","buildIcon","google_login","clientId","GOOGLE_CLIENT_ID","onLogoutSuccess","render","onFailure","connect","loginActions","ImportDrawer","onImportFile","onToggleDrawer","open","drawer","login_login","logoutButton","buildLogoutButton","button","accept","type","htmlFor","anchor","onClose","filterDrawerStyles","FilterDrawer","tabIndex","role","onKeyDown","navigatorStyles","appBar","grow","Navigator","shortByName","filterDrawer_filterDrawer","importDrawer_importDrawer","Home","library","add","fab","faSignInAlt","faSignOutAlt","faFileImport","swipeableView","navigator_navigator","file","zip","JSZip","fullname","split","loadAsync","async","data","JSON","parse","getState","listGames","objectSpread","setTimeout","gamesActions","getSource","sort","b","reverse","reverseList","App","home","store","ReactDOM","es","routes_app_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5ae411ec.chunk.js","sourcesContent":["module.exports = {\n    CARD_OPACITY: 0.5,\n    CATALOG_TAB: 0,\n    FIRST_PAGE: -1,\n    IMPORT_DRAWER: 'importDrawer',\n    FILTER_DRAWER: 'filterDrawer',\n    ITEMS_BY_PAGE: 20,\n    ERROR_IMAGE: 'data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22288%22%20height%3D%22225%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20288%20225%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_164edaf95ee%20text%20%7B%20fill%3A%23eceeef%3Bfont-weight%3Abold%3Bfont-family%3AArial%2C%20Helvetica%2C%20Open%20Sans%2C%20sans-serif%2C%20monospace%3Bfont-size%3A14pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_164edaf95ee%22%3E%3Crect%20width%3D%22288%22%20height%3D%22225%22%20fill%3D%22%2355595c%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%2296.32500076293945%22%20y%3D%22118.8%22%3EThumbnail%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E',  // eslint-disable-line max-len\n    WISHLIST_TAB: 1\n};\n","import { setConfig } from 'react-hot-loader';\n\nsetConfig({\n    ignoreSFC: true, // RHL will be __completely__ disabled for SFC\n    pureRender: true, // RHL will not change render method\n});\n","//@vendor\nimport { createActions } from 'redux-actions';\nimport JSZip from 'jszip';\nimport get from 'lodash/get';\n// @helpers\nimport { getSource } from './../utilities/index';\n// @constants\nimport { backup } from './../data/db.json';\nimport { ITEMS_BY_PAGE } from './../constants/index';\n\nconst actions = createActions(\n    'IMPORT_FILE',\n    'IMPORT_FILE_ERROR',\n\n    'LOAD_JSON_INFORMATION',\n    'LOAD_GAMES_INFORMATION',\n    'LOAD_WISH_LIST_INFORMATION',\n\n    'SET_INFORMATION_FILTER',\n    'SET_INFORMATION_FILTER_SUCCESS',\n    'SET_TAB',\n\n    'SHORT_DATA_BY_NAME',\n    'SHORT_DATA_BY_NAME_SUCCESS',\n\n    'RESET_FILTERED_VALUES',\n\n    'TOGGLE_DRAWER'\n);\n\nconst importFile = (file) => (dispatch) => {\n    const zip = new JSZip();\n    const fullname = get(file, 'name', '').split('.');\n    let name = null;\n\n    if (fullname.length > 0) {\n        name = fullname[0];\n    }\n\n    if (name) {\n        zip.loadAsync(file).then(() => {\n            zip.file(name).async('string').then(data => {\n                const json = JSON.parse(data);\n                dispatch(actions.importFile());\n                dispatch(initGames(get(json, 'backup')));\n            });\n        }).catch(e => {\n            dispatch(actions.importFileError({ error: get(e, 'Error', '') }));\n        });\n    }\n};\n\nconst initGames = (source) => (dispatch) => {\n    const json = source || backup;\n    const allGames = get(json, 'Game', []).slice(0);\n    const gamesLabels = get(json, 'GameLabel', []).slice(0);\n    const labels = get(json, 'Label', []).slice(0);\n    const platforms = get(json, 'Platform', []).slice(0);\n\n    const gamesWithLabels = allGames.map(game => {\n        const gameLabels = gamesLabels.filter(gameLabel => gameLabel.game_id === game.id);\n        return Object.assign({}, game, {\n            labels: gameLabels.map(gameLabel => labels.find(label => label.id === gameLabel.label_id))\n        });\n    });\n\n    const games = gamesWithLabels.filter(game => !get(game, 'is_wishlist_item', false));\n    const gamesInWishList = gamesWithLabels.filter(game => get(game, 'is_wishlist_item', false));\n\n    dispatch(actions.loadJsonInformation({ response: { games, gamesInWishList, labels, platforms } }));\n};\n\nconst getListByPage = (page, source) => {\n    const load = ITEMS_BY_PAGE;\n    const start = page * load;\n    const games = source.slice(start, start + load);\n    const hasMoreItems = source.length > (start + games.length);\n    return {\n        games,\n        hasMoreItems\n    };\n};\n\nconst loadGames = (page, params) => (dispatch, getState) => {\n    const listGames = getListByPage(page, params.source);\n\n    dispatch(actions.loadGamesInformation({\n        response: {\n            propGames: params.propGames,\n            propMoreItems: params.propMoreItems,\n            ...listGames\n        }\n    }));\n};\n\nconst reverseList = (source, asc) => {\n    source = source.sort((a, b) => {\n        if (a.name < b.name) { return -1; }\n        if (a.name > b.name) { return 1; }\n        return 0;\n    });\n\n    if (asc) {\n        source = source.reverse();\n    }\n\n    return source;\n};\n\nconst setLabelFilter = (idLabelFilter) => (dispatch, getState) => {\n    if (idLabelFilter) {\n        const source = getState().gamesInformation.get('source');\n        const sourceFiltered = source.filter(game => {\n            const label = game.labels.find(label => label.id === idLabelFilter);\n            return !!label;\n        });\n        const page = 0;\n        const listGames = getListByPage(page, sourceFiltered);\n        dispatch(actions.setInformationFilter());\n        setTimeout(() => {\n            dispatch(actions.setInformationFilterSuccess({\n                response: {\n                    idLabelFilter,\n                    sourceFiltered,\n                    ...listGames\n                }\n            }));\n        }, 500);\n    } else {\n        dispatch(actions.resetFilteredValues());\n    }\n};\n\nconst shortByName = () => (dispatch, getState) => {\n    const gamesInformation = getState().gamesInformation;\n    const tab = gamesInformation.get('tab');\n    const idLabelFilter = gamesInformation.get('idLabelFilter');\n    let data = getSource(tab, idLabelFilter);\n    const source = reverseList(gamesInformation.get(data).slice(0), gamesInformation.get('asc'));\n\n    dispatch(actions.shortDataByName());\n    setTimeout(() => {\n        dispatch(actions.shortDataByNameSuccess({ response: { source } }));\n    }, 500);\n};\n\nexport {\n    actions,\n    importFile,\n    initGames,\n    loadGames,\n    setLabelFilter,\n    shortByName\n};\n","//@vendor\nimport Immutable from 'immutable';\nimport { handleActions, combineActions } from 'redux-actions';\nimport get from 'lodash/get';\n//@actions\nimport { actions } from '../actions/gamesInformation';\n// @constants\nimport { CATALOG_TAB, ITEMS_BY_PAGE } from '../constants/index';\n\nconst setInitialState = () => Immutable.fromJS({\n    asc: false,\n    filterDrawer: false,\n    games: [],\n    hasMoreItems: true,\n    hasMoreItemsWishList: true,\n    idLabelFilter: null,\n    importDrawer: false,\n    labels: [],\n    loading: true,\n    platforms: [],\n    source: [],\n    sourceFiltered: [],\n    sourceWishList: [],\n    tab: CATALOG_TAB,\n    wishList: []\n});\n\nconst shortDataByName = (state, action) => {\n    const isCatalog = state.get('tab') === CATALOG_TAB;\n    const idLabelFilter = state.get('idLabelFilter');\n    let source = 'source';\n    if (!isCatalog) {\n        source = 'sourceWishList';\n    } else if (idLabelFilter) {\n        source = 'sourceFiltered';\n    }\n    const view = isCatalog ? 'games' : 'wishList';\n    const hasItems = isCatalog ? 'hasMoreItems' : 'hasMoreItemsWishList';\n\n    return state.merge({\n        asc: !state.get('asc'),\n        [source]: get(action, 'payload.response.source', []),\n        [view]: [],\n        [hasItems]: true,\n        loading: false\n    });\n};\n\nconst gameInformationReducer = handleActions(\n    {\n        [actions.loadJsonInformation]: (state, action) =>\n            state.merge({\n                loading: false,\n                source: get(action, 'payload.response.games', []),\n                sourceWishList: get(action, 'payload.response.gamesInWishList', []),\n                labels: get(action, 'payload.response.labels', []),\n                platforms: get(action, 'payload.response.platforms', []),\n            }),\n        [actions.loadGamesInformation]: (state, action) =>\n            state.mergeDeep({\n                loading: false,\n                [get(action, 'payload.response.propGames')]: get(action, 'payload.response.games', []),\n                [get(action, 'payload.response.propMoreItems')]: get(action, 'payload.response.hasMoreItems', false)\n            }),\n        [combineActions(actions.shortDataByName, actions.setInformationFilter)]: (state) =>\n            state.merge({\n                loading: true\n            }),\n        [actions.shortDataByNameSuccess]: (state, action) =>\n            shortDataByName(state, action),\n        [actions.setInformationFilterSuccess]: (state, action) =>\n            state.merge({\n                games: [],\n                sourceFiltered: get(action, 'payload.response.sourceFiltered', []),\n                idLabelFilter: get(action, 'payload.response.idLabelFilter', null),\n                loading: false,\n                hasMoreItems: true\n            }),\n        [actions.setTab]: (state, action) =>\n            state.merge({\n                tab: get(action, 'payload.tab')\n            }),\n        [actions.resetFilteredValues]: (state) =>\n            state.merge({\n                games: state.get('source').slice(0, ITEMS_BY_PAGE),\n                sourceFiltered: [],\n                idLabelFilter: null\n            }),\n        [actions.toggleDrawer]: (state, action) =>\n            state.merge({\n                [get(action, 'payload.response.drawer')]: get(action, 'payload.response.open', false)\n            }),\n        [actions.importFile]: (state) =>\n            state.merge({\n                games: [],\n                wishList: [],\n                importDrawer: false,\n                error: false,\n                loading: true\n            }),\n        [actions.importFileError]: (state) =>\n            state.merge({\n                error: true,\n                importDrawer: false\n            })\n    },\n    setInitialState()\n);\n\nexport default gameInformationReducer;\n","//@vendor\nimport { createActions } from 'redux-actions';\n\nconst actions = createActions(\n    'LOGIN_SUCCESS',\n    'LOGIN_FAILURE',\n    'LOGOUT_SUCCESS',\n);\n\nexport {\n    actions\n};\n","//@vendor\nimport Immutable from 'immutable';\nimport { handleActions } from 'redux-actions';\nimport get from 'lodash/get';\n//@actions\nimport { actions } from '../actions/login';\n\nconst setInitialState = () => Immutable.fromJS({\n    isAuthenticated: false,\n    tokenId: null,\n    error: ''\n});\n\nconst loginReducer = handleActions(\n    {\n        [actions.loginSuccess]: (state, action) =>\n            state.merge({\n                isAuthenticated: true,\n                tokenId: get(action, 'payload.tokenId', null)\n            }),\n        [actions.loginFailure]: (state, action) =>\n            state.merge({\n                isAuthenticated: false,\n                tokenId: null,\n                error: get(action, 'payload.error', '')\n            }),\n        [actions.logoutSuccess]: (state, action) =>\n            state.merge({\n                isAuthenticated: false,\n                tokenId: null\n            }),\n    },\n    setInitialState()\n);\n\nexport default loginReducer;\n","import { combineReducers } from 'redux';\nimport gamesInformation from '../reducers/gamesInformation';\nimport login from '../reducers/login';\n\nexport const rootReducer = combineReducers({\n    gamesInformation,\n    login\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport reduxImmutableStateInvariant from 'redux-immutable-state-invariant';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from './rootReducer';\n\nconst configureStore = () => {\n\n    const middleware = [\n        thunk,\n        reduxImmutableStateInvariant()\n    ];\n\n    const store = createStore(\n        rootReducer,\n        applyMiddleware(...middleware)\n    );\n\n    return store;\n};\n\nexport default configureStore;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit http://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","const swipeableViewStyles = (theme) => ({\n    root: {\n        backgroundColor: theme.palette.background.paper\n    }\n});\n\nexport default swipeableViewStyles;\n","const tabContainerStyles = (theme) => ({\n    tab: {\n        padding: 8 * 3\n    }\n});\n\nexport default tabContainerStyles;\n","// @vendors\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n// @material\nimport {\n    Typography,\n    withStyles\n} from '@material-ui/core';\n// @styles\nimport tabContainerStyles from './tabContainerStyles';\n\nclass TabContainer extends Component {\n\n    render() {\n\n        const { classes, children, dir } = this.props;\n\n        return (\n            <Typography component=\"div\" dir={dir} className={classes.tab}>\n                {children}\n            </Typography>\n        );\n    }\n}\n\nTabContainer.propTypes = {\n    classes: PropTypes.object.isRequired,\n    children: PropTypes.node,\n    dir: PropTypes.string.isRequired\n};\n\n\nexport default withStyles(tabContainerStyles)(TabContainer);\n","const labelTagStyles = (theme) => ({\n    chip: {\n        marginLeft: '10px',\n        '&:hover': {\n            fontWeight: 'bold',\n            boxShadow: '2px 2px 1px 0px rgba(0,0,0,0.5)'\n        }\n    },\n    drawerChip: {\n        marginLeft: 0,\n        width: '100%'\n    },\n    seletedChip: {\n        fontWeight: 'bold'\n    }\n});\n\nexport default labelTagStyles;\n","// @vendors\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n// @material\nimport {\n    Chip,\n    withStyles\n} from '@material-ui/core';\n// @styles\nimport labelTagStyles from './labelTagStyles';\n// @utilities\nimport { tagCodeToColor } from '../../utilities/index';\n// @constants\nimport { CARD_OPACITY } from './../../constants/index';\n\nclass LabelTag extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.handleClickFilter = this.handleClickFilter.bind(this);\n    }\n\n    handleClickFilter() {\n        const { gamesInformation, setLabelFilter, label } = this.props;\n        if (gamesInformation.get('idLabelFilter') === label.id) {\n            setLabelFilter(null);\n        } else {\n            setLabelFilter(label.id);\n        }\n    }\n\n    render() {\n        const { classes, isDrawer, label, gamesInformation } = this.props;\n\n        const labelSeleted = gamesInformation.get('idLabelFilter') === label.id;\n        const opacity = labelSeleted ? 1 : CARD_OPACITY;\n        const tagColor = tagCodeToColor(label.background_color, opacity);\n\n        const classTag = classNames(\n            classes.chip,\n            {\n                [classes.seletedChip]: labelSeleted,\n                [classes.drawerChip]: isDrawer\n            }\n        );\n\n        return (\n            <Chip className={classTag}\n                style={{ backgroundColor: tagColor }}\n                onClick={this.handleClickFilter}\n                key={`label-${label.id}`}\n                label={label.name}\n                clickable\n            />\n        );\n    }\n}\n\nLabelTag.propTypes = {\n    classes: PropTypes.object.isRequired,\n    gamesInformation: PropTypes.object.isRequired,\n    isDrawer: PropTypes.bool,\n    label: PropTypes.object.isRequired,\n    setLabelFilter: PropTypes.func.isRequired\n};\n\nexport default withStyles(labelTagStyles)(LabelTag);\n","import { CATALOG_TAB } from '../constants/index';\n\nconst tagCodeToColor = (num, opacity) => {\n    num >>>= 0;\n    const b = num & 0xFF;\n    const g = (num & 0xFF00) >>> 8;\n    const r = (num & 0xFF0000) >>> 16;\n    const a = opacity || 1;\n\n    return `rgba(${[r, g, b, a].join(',')})`;\n};\n\nconst getSource = (tab, idLabelFilter) => {\n    let data = 'source';\n\n    if (tab !== CATALOG_TAB) {\n        data = 'sourceWishList';\n    } else if (idLabelFilter) {\n        data = 'sourceFiltered';\n    }\n\n    return data;\n};\n\nexport {\n    getSource,\n    tagCodeToColor\n};\n","const gameCardStyles = (theme) => ({\n    card: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    cardMedia: {\n        paddingTop: '56.25%', // 16:9\n    },\n    cardContent: {\n        flexGrow: 1,\n    },\n    cardActions: {\n        flexWrap: 'wrap'\n    },\n    labels: {\n        marginBottom: '15px',\n        textAlign: 'left',\n        width: '100%'\n    }\n});\n\nexport default gameCardStyles;\n","// @vendors\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\n// @material\nimport {\n    Button,\n    Card,\n    CardActions,\n    CardContent,\n    CardHeader,\n    CardMedia,\n    Typography,\n    Zoom,\n    withStyles\n} from '@material-ui/core';\n// @components\nimport LabelTag from '../labelTag/labelTag';\n// @styles\nimport gameCardStyles from './gameCardStyles';\n// @constants\nimport { ERROR_IMAGE } from './../../constants/index';\n\nclass GameCard extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { imageSrc: props.image };\n\n        this.loadLabelTag = this.loadLabelTag.bind(this);\n    }\n\n    componentDidMount() {\n        this.checkImage(this.props.image);\n    }\n\n    checkImage(src) {\n        var img = new Image();\n        const imageSrc = ERROR_IMAGE;\n\n        img.onerror = (e) => this.setState({ imageSrc });\n        img.src = src;\n    }\n\n    loadLabelTag() {\n        const { labels, gamesInformation, setLabelFilter } = this.props;\n\n        return labels.map(label => {\n            return (\n                <LabelTag\n                    key={label.id}\n                    label={label}\n                    gamesInformation={gamesInformation}\n                    setLabelFilter={setLabelFilter}\n                />\n            );\n        });\n    }\n\n    render() {\n        const { classes, description, title, plataform, gamesInformation } = this.props;\n        const { imageSrc } = this.state;\n        const plataformData = gamesInformation.get('platforms').find(item => item.id === plataform);\n        const labelsData = this.loadLabelTag();\n\n        return (\n            <Zoom in>\n                <Card className={classes.card}>\n                    <CardMedia\n                        className={classes.cardMedia}\n                        image={imageSrc}\n                    />\n                    <CardHeader\n                        title={title}\n                        subheader={get(plataformData, 'name', '')}\n                    />\n                    <CardContent className={classes.cardContent}>\n                        <Typography noWrap>\n                            {description}\n                        </Typography>\n\n                    </CardContent>\n                    <CardActions className={classes.cardActions}>\n                        <div className={classes.labels}>\n                            {labelsData}\n                        </div>\n                        <Button size=\"small\" color=\"primary\">\n                            View\n                        </Button>\n                    </CardActions>\n                </Card>\n            </Zoom>\n        );\n    }\n}\n\nGameCard.propTypes = {\n    idGame: PropTypes.number.isRequired,\n    classes: PropTypes.object.isRequired,\n    description: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    plataform: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    labels: PropTypes.array.isRequired,\n    gamesInformation: PropTypes.object.isRequired,\n    setLabelFilter: PropTypes.func.isRequired\n};\n\nexport default withStyles(gameCardStyles)(GameCard);\n","const catalogStyles = (theme) => ({\n    heroUnit: {\n        backgroundColor: theme.palette.background.paper,\n    },\n    heroContent: {\n        maxWidth: 600,\n        margin: '0 auto',\n        padding: `${theme.spacing.unit * 8}px 0 ${theme.spacing.unit * 6}px`,\n    },\n    layout: {\n        width: 'auto',\n        marginLeft: theme.spacing.unit * 3,\n        marginRight: theme.spacing.unit * 3,\n        [theme.breakpoints.up(1100 + theme.spacing.unit * 3 * 2)]: {\n            width: 1100,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n        },\n    },\n    cardGrid: {\n        padding: `${theme.spacing.unit * 8}px 0`,\n    },\n    card: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    cardMedia: {\n        paddingTop: '56.25%', // 16:9\n    },\n    cardContent: {\n        flexGrow: 1,\n    },\n    loading: {\n        marginTop: '10px'\n    },\n    footer: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing.unit * 6,\n    },\n});\n\nexport default catalogStyles;\n","// @vendors\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport get from 'lodash/get';\nimport LazyLoad from 'react-lazyload';\nimport InfiniteScroll from 'react-infinite-scroller';\n// @material\nimport {\n    CircularProgress,\n    CssBaseline,\n    Grid,\n    Typography\n} from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n// @components\nimport GameCard from './../gameCard/gameCard';\n// @styles\nimport catalogStyles from './catalogStyles';\n// @constants\nimport { FIRST_PAGE } from '../../constants/index';\n\nclass Catalog extends Component {\n\n    buildItems() {\n        const { gamesInformation, games, setLabelFilter } = this.props;\n\n        return (\n            games.map(card => (\n                <Grid item key={`card-${get(card, 'id')}`} xs={12} sm={6} md={4} lg={3}>\n                    <LazyLoad height={250}>\n                        <GameCard\n                            idGame={get(card, 'id')}\n                            description={get(card, 'description_short', '')}\n                            title={get(card, 'name', '')}\n                            image={get(card, 'image_url_medium', '')}\n                            plataform={get(card, 'platform_id', 0)}\n                            labels={get(card, 'labels', [])}\n                            gamesInformation={gamesInformation}\n                            setLabelFilter={setLabelFilter}\n                        />\n                    </LazyLoad>\n                </Grid>\n            ))\n        );\n    }\n\n    buildCatalog(items, loader) {\n        const { classes, loadGames, hasMoreItems } = this.props;\n\n        return (\n            <main>\n                <InfiniteScroll\n                    pageStart={FIRST_PAGE}\n                    loadMore={loadGames}\n                    hasMore={hasMoreItems}\n                    loader={loader}\n                >\n                    <div className={classNames(classes.layout, classes.cardGrid)}>\n                        <Grid container spacing={40}>\n                            {items}\n                        </Grid>\n                    </div>\n                </InfiniteScroll>\n            </main>\n        );\n    }\n\n    buildLoader() {\n        const { classes } = this.props;\n\n        return (\n            <div key={0} className={classes.loading}>\n                <CircularProgress />\n            </div>\n        ); // Key to remove warning of infinite scroll\n    }\n\n    buildError() {\n        return (\n            <Typography variant=\"h2\" align=\"center\" color=\"error\" gutterBottom>\n                There was an error loading your file.\n            </Typography>\n        );\n    }\n\n    render() {\n        const { gamesInformation } = this.props;\n        const loading = gamesInformation.get('loading');\n        const error = gamesInformation.get('error');\n        let catalogContainer = null;\n\n        const loader = this.buildLoader();\n        const items = this.buildItems();\n        const errorMessage = this.buildError();\n\n        if (error) {\n            catalogContainer = errorMessage;\n        } else if (loading) {\n            catalogContainer = loader;\n        } else {\n            catalogContainer = this.buildCatalog(items, loader);\n        }\n\n        return (\n            <React.Fragment>\n                <CssBaseline />\n                {catalogContainer}\n            </React.Fragment >\n        );\n    }\n}\n\nCatalog.propTypes = {\n    classes: PropTypes.object.isRequired,\n    gamesInformation: PropTypes.object.isRequired,\n    loadGames: PropTypes.func.isRequired,\n    hasMoreItems: PropTypes.bool.isRequired,\n    games: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.array\n    ]).isRequired,\n    setLabelFilter: PropTypes.func.isRequired\n};\n\nexport default withStyles(catalogStyles)(Catalog);\n","// @vendors\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport SwipeableViews from 'react-swipeable-views';\n// @material\nimport {\n    AppBar,\n    Tabs,\n    Tab,\n    withStyles\n} from '@material-ui/core';\nimport {\n    Favorite,\n    LibraryBooks\n} from '@material-ui/icons';\n// @styles\nimport swipeableViewStyles from './swipeableViewStyles';\n// @componets\nimport TabContainer from './tabContainer';\nimport Catalog from '../catalog/catalog';\n// @constants\nimport { CATALOG_TAB, WISHLIST_TAB } from '../../constants/index';\n\nclass SwipeableView extends Component {\n\n    componentDidMount() {\n        this.props.initGames();\n    }\n\n    handleChange = (event, tab) => {\n        this.props.setTab({ tab });\n    };\n\n    handleChangeIndex = tab => {\n        this.props.setTab({ tab });\n    };\n\n\n    buildCatalogTab() {\n        const { gamesInformation, loadGames, setLabelFilter } = this.props;\n        const tab = gamesInformation.get('tab');\n        const source = gamesInformation.get('idLabelFilter') ? 'sourceFiltered' : 'source';\n        const params = {\n            source: gamesInformation.get(source),\n            propGames: 'games',\n            propMoreItems: 'hasMoreItems'\n        };\n\n        return tab === CATALOG_TAB ? (\n            <Catalog\n                gamesInformation={gamesInformation}\n                loadGames={(page) => loadGames(page, params)}\n                hasMoreItems={gamesInformation.get('hasMoreItems')}\n                games={gamesInformation.get('games')}\n                setLabelFilter={setLabelFilter}\n            />\n        ) : null;\n    }\n\n    buildWishListTab() {\n        const { gamesInformation, loadGames, setLabelFilter } = this.props;\n        const tab = gamesInformation.get('tab');\n        const params = {\n            source: gamesInformation.get('sourceWishList'),\n            propGames: 'wishList',\n            propMoreItems: 'hasMoreItemsWishList'\n        };\n\n        return tab === WISHLIST_TAB ? (\n            <Catalog\n                gamesInformation={gamesInformation}\n                loadGames={(page) => loadGames(page, params)}\n                hasMoreItems={gamesInformation.get('hasMoreItemsWishList')}\n                games={gamesInformation.get('wishList')}\n                setLabelFilter={setLabelFilter}\n            />\n        ) : null;\n    }\n\n\n    render() {\n\n        const { classes, theme, gamesInformation } = this.props;\n\n        const tab = gamesInformation.get('tab');\n        const catalog = this.buildCatalogTab();\n        const wishList = this.buildWishListTab();\n        const axis = theme.direction === 'rtl' ? 'x-reverse' : 'x';\n\n        return (\n            <div className={classes.root}>\n                <AppBar position=\"static\" color=\"default\">\n                    <Tabs\n                        value={tab}\n                        onChange={this.handleChange}\n                        indicatorColor=\"primary\"\n                        textColor=\"primary\"\n                        variant=\"fullWidth\"\n                    >\n                        <Tab label=\"Catalog\" icon={<LibraryBooks />} />\n                        <Tab label=\"WishList\" icon={<Favorite />} />\n                    </Tabs>\n                </AppBar>\n                <SwipeableViews\n                    axis={axis}\n                    index={tab}\n                    onChangeIndex={this.handleChangeIndex}\n                >\n                    <TabContainer dir={theme.direction}>\n                        {catalog}\n                    </TabContainer>\n                    <TabContainer dir={theme.direction}>\n                        {wishList}\n                    </TabContainer>\n                </SwipeableViews>\n            </div >\n        );\n    }\n}\n\nSwipeableView.propTypes = {\n    classes: PropTypes.object.isRequired,\n    gamesInformation: PropTypes.object.isRequired,\n    initGames: PropTypes.func.isRequired,\n    loadGames: PropTypes.func.isRequired,\n    setLabelFilter: PropTypes.func.isRequired,\n    setTab: PropTypes.func.isRequired,\n    theme: PropTypes.object.isRequired\n};\n\nexport default withStyles(swipeableViewStyles, { withTheme: true })(SwipeableView);\n","const footerStyles = (theme) => ({\n    footer: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing.unit * 6,\n    }\n});\n\nexport default footerStyles;\n","// @vendors\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n// @material\nimport { Typography } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n// @styles\nimport footerStyles from './footerStyles';\n\nclass Footer extends Component {\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <footer className={classes.footer}>\n                <Typography variant=\"h6\" align=\"center\" gutterBottom>\n                    Filgaia developments\n                </Typography>\n                <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n                    Alone in the fields\n                </Typography>\n            </footer>\n        );\n    }\n}\n\nFooter.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(footerStyles)(Footer);\n","const importDrawerStyles = (theme) => ({\n    listItem: {\n        marginRight: 0\n    },\n    input: {\n        display: 'none'\n    },\n    labelFor: {\n        cursor: 'pointer'\n    }\n});\n\nexport default importDrawerStyles;\n","const loginStyles = (theme) => ({\n    listItem: {\n        marginRight: 0\n    }\n});\n\nexport default loginStyles;\n","// @vendors\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { GoogleLogin } from 'react-google-login';\nimport { GoogleLogout } from 'react-google-login';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// @material\nimport {\n    ListItemIcon,\n    Tooltip\n} from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n// @actions\nimport { actions as loginActions } from '../../actions/login';\n// @constants\nimport { GOOGLE_CLIENT_ID } from '../../data/keys.json';\n// @styles\nimport loginStyles from './loginStyles';\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n\n        this.buildLoginIcon = this.buildLoginIcon.bind(this);\n        this.buildLogoutIcon = this.buildLogoutIcon.bind(this);\n    }\n\n    checkUserAuthenticated = () => {\n        return this.props.loginInformation.get('isAuthenticated');\n    };\n\n    handleLoginSuccess = response => {\n        this.props.loginSuccess({ tokenId: response.tokenId });\n    };\n\n    handleLoginFailure = response => {\n        this.props.loginFailure({ error: response.error });\n    };\n\n    buildIcon(icon, title, onClick) {\n        const { classes } = this.props;\n\n        return (\n            <ListItemIcon className={classes.listItem} onClick={onClick}>\n                <Tooltip title={title} aria-label={title}>\n                    <FontAwesomeIcon icon={icon} size=\"lg\" />\n                </Tooltip>\n            </ListItemIcon>\n        );\n    }\n\n    buildLoginIcon(renderProps) {\n        return this.buildIcon('sign-in-alt', 'Login', renderProps.onClick);\n    }\n\n    buildLogoutIcon(renderProps) {\n        return this.buildIcon('sign-out-alt', 'Logout', renderProps.onClick);\n    }\n\n    render() {\n        const { logoutSuccess } = this.props;\n\n        return this.checkUserAuthenticated() ? (\n            <GoogleLogout\n                clientId={GOOGLE_CLIENT_ID}\n                onLogoutSuccess={logoutSuccess}\n                render={this.buildLogoutIcon}\n            />\n        ) :\n            (\n                <GoogleLogin\n                    clientId={GOOGLE_CLIENT_ID}\n                    onSuccess={this.handleLoginSuccess}\n                    onFailure={this.handleLoginFailure}\n                    render={this.buildLoginIcon}\n                />\n            );\n    }\n}\n\nLogin.propTypes = {\n    classes: PropTypes.object.isRequired,\n    loginFailure: PropTypes.func.isRequired,\n    loginInformation: PropTypes.object.isRequired,\n    loginSuccess: PropTypes.func.isRequired,\n    logoutSuccess: PropTypes.func.isRequired\n};\n\nexport default connect(\n    state => ({\n        loginInformation: state.login\n    }),\n    {\n        loginFailure: loginActions.loginFailure,\n        loginSuccess: loginActions.loginSuccess,\n        logoutSuccess: loginActions.logoutSuccess\n    })(withStyles(loginStyles)(Login));\n","// @vendors\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// @material\nimport {\n    Drawer,\n    IconButton,\n    List,\n    ListItem,\n    ListItemIcon,\n    Tooltip\n} from '@material-ui/core';\n// https://material.io/tools/icons/?style=baseline\nimport {\n    CloudDownload\n} from '@material-ui/icons';\nimport { withStyles } from '@material-ui/core/styles';\n// @styles\nimport importDrawerStyles from './importDrawerStyles';\n// @constants\nimport { IMPORT_DRAWER } from '../../constants/index';\n// @components\nimport Login from '../../components/login/login';\n\nclass ImportDrawer extends Component {\n    constructor(props) {\n        super(props);\n\n        this.onImportFile = this.onImportFile.bind(this);\n        this.onToggleDrawer = this.onToggleDrawer.bind(this);\n    }\n\n    onImportFile(event) {\n        this.props.importFile(get(event, 'target.files.0'));\n    }\n\n    onToggleDrawer(open) {\n        const response = { drawer: IMPORT_DRAWER, open };\n        this.props.toggleDrawer({ response });\n    }\n\n    buildLogoutButton() {\n        return <Login />;\n    }\n\n    buildItems() {\n        const { classes } = this.props;\n        const logoutButton = this.buildLogoutButton();\n        const options = [\n            { icon: ['fab', 'playstation'], title: 'Coming Soon...' },\n            { icon: ['fab', 'xbox'], title: 'Coming Soon...' }\n        ];\n\n        const items = options.map((item, index) => (\n            <ListItem button key={`ìmport-${index}`}>\n                <ListItemIcon className={classes.listItem}>\n                    <Tooltip title={item.title} aria-label={item.title}>\n                        <FontAwesomeIcon icon={item.icon} size=\"lg\" />\n                    </Tooltip>\n                </ListItemIcon>\n            </ListItem>\n        ));\n\n        return (\n            <div>\n                <List>\n                    <ListItem button key=\"import-file\">\n                        <input accept=\".c, application/x-zip-compressed\" className={classes.input} id=\"import-file\" type=\"file\" onChange={this.onImportFile} />\n                        <label htmlFor=\"import-file\" className={classes.labelFor}>\n                            <ListItemIcon className={classes.listItem}>\n                                <Tooltip title=\"From file\" aria-label=\"From file\">\n                                    <FontAwesomeIcon icon=\"file-import\" size=\"lg\" />\n                                </Tooltip>\n                            </ListItemIcon>\n                        </label>\n                    </ListItem>\n                    <ListItem button key=\"import-drive\">\n                        {logoutButton}\n                    </ListItem>\n                    {items}\n                </List>\n            </div >\n        );\n    }\n\n    render() {\n        const { importDrawer } = this.props;\n        const items = this.buildItems();\n\n        return (\n            <React.Fragment>\n                <IconButton color=\"inherit\" onClick={() => this.onToggleDrawer(true)}>\n                    <Tooltip title=\"Add Games...\" aria-label=\"Add Games...\">\n                        <CloudDownload />\n                    </Tooltip>\n                </IconButton>\n                <Drawer anchor=\"right\" open={importDrawer} onClose={() => this.onToggleDrawer(false)}>\n                    {items}\n                </Drawer>\n            </React.Fragment>\n        );\n    }\n}\n\nImportDrawer.propTypes = {\n    classes: PropTypes.object.isRequired,\n    importDrawer: PropTypes.bool.isRequired,\n    importFile: PropTypes.func.isRequired,\n    toggleDrawer: PropTypes.func.isRequired\n};\n\nexport default withStyles(importDrawerStyles)(ImportDrawer);\n","const filterDrawerStyles = (theme) => ({\n    listItem: {\n        marginRight: 0,\n        width: '100%'\n    }\n});\n\nexport default filterDrawerStyles;\n","// @vendors\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n// @material\nimport {\n    Drawer,\n    IconButton,\n    List,\n    ListItem,\n    ListItemIcon,\n    Tooltip\n} from '@material-ui/core';\n// https://material.io/tools/icons/?style=baseline\nimport {\n    FilterList\n} from '@material-ui/icons';\nimport { withStyles } from '@material-ui/core/styles';\n// @componets\nimport LabelTag from '../labelTag/labelTag';\n// @styles\nimport filterDrawerStyles from './filterDrawerStyles';\n// @constants\nimport { FILTER_DRAWER } from '../../constants/index';\n\nclass FilterDrawer extends Component {\n    constructor(props) {\n        super(props);\n\n        this.onToggleDrawer = this.onToggleDrawer.bind(this);\n    }\n\n    onToggleDrawer(open) {\n        const response = { drawer: FILTER_DRAWER, open };\n        this.props.toggleDrawer({ response });\n    }\n\n    buildItems() {\n        const { classes, gamesInformation, setLabelFilter } = this.props;\n        const labelsTagsItems = gamesInformation.get('labels');\n\n        const items = labelsTagsItems.map((item, index) => (\n            <ListItem button key={`filter-${index}`}>\n                <ListItemIcon className={classes.listItem}>\n                    <Tooltip title={item.name} aria-label={item.name}>\n                        <LabelTag\n                            key={item.id}\n                            isDrawer\n                            label={item}\n                            gamesInformation={gamesInformation}\n                            setLabelFilter={setLabelFilter}\n                        />\n                    </Tooltip>\n                </ListItemIcon>\n            </ListItem>\n        ));\n\n        return (\n            <List>\n                {items}\n            </List>\n        );\n    }\n\n    render() {\n        const { filterDrawer } = this.props;\n        const items = this.buildItems();\n\n        return (\n            <React.Fragment>\n                <IconButton color=\"inherit\" onClick={() => this.onToggleDrawer(true)}>\n                    <Tooltip title=\"Filter...\" aria-label=\"Filter...\">\n                        <FilterList />\n                    </Tooltip>\n                </IconButton>\n                <Drawer anchor=\"right\" open={filterDrawer} onClose={() => this.onToggleDrawer(false)}>\n                    <div\n                        tabIndex={0}\n                        role=\"button\"\n                        onClick={() => this.onToggleDrawer(false)}\n                        onKeyDown={() => this.onToggleDrawer(false)}\n                    >\n                        {items}\n                    </div>\n                </Drawer>\n            </React.Fragment>\n        );\n    }\n}\n\nFilterDrawer.propTypes = {\n    classes: PropTypes.object.isRequired,\n    filterDrawer: PropTypes.bool.isRequired,\n    gamesInformation: PropTypes.object.isRequired,\n    setLabelFilter: PropTypes.func.isRequired,\n    toggleDrawer: PropTypes.func.isRequired\n};\n\nexport default withStyles(filterDrawerStyles)(FilterDrawer);\n","const navigatorStyles = (theme) => ({\n    appBar: {\n        position: 'relative',\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    icon: {\n        marginRight: theme.spacing.unit * 2,\n    }\n});\n\nexport default navigatorStyles;\n","// @vendors\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n// @material\nimport {\n    AppBar,\n    IconButton,\n    Toolbar,\n    Tooltip,\n    Typography\n} from '@material-ui/core';\n// https://material.io/tools/icons/?style=baseline\nimport {\n    Games,\n    SortByAlpha\n} from '@material-ui/icons';\nimport { withStyles } from '@material-ui/core/styles';\n// @components\nimport ImportDrawer from '../importDrawer/importDrawer';\nimport FilterDrawer from '../filterDrawer/filterDrawer';\n// @styles\nimport navigatorStyles from './navigatorStyles';\n\nclass Navigator extends Component {\n    render() {\n        const { classes, importFile, gamesInformation, setLabelFilter, shortByName, toggleDrawer } = this.props;\n\n        return (\n            <AppBar position=\"static\" className={classes.appBar}>\n                <Toolbar>\n                    <Games className={classes.icon} />\n                    <Typography variant=\"h6\" color=\"inherit\" noWrap className={classes.grow}>\n                        My Game Collection Viewer\n                    </Typography>\n                    <IconButton color=\"inherit\" onClick={shortByName}>\n                        <Tooltip title=\"Order list\" aria-label=\"Order list\">\n                            <SortByAlpha />\n                        </Tooltip>\n                    </IconButton>\n                    <FilterDrawer\n                        filterDrawer={gamesInformation.get('filterDrawer')}\n                        gamesInformation={gamesInformation}\n                        setLabelFilter={setLabelFilter}\n                        toggleDrawer={toggleDrawer}\n                    />\n                    <ImportDrawer\n                        importDrawer={gamesInformation.get('importDrawer')}\n                        importFile={importFile}\n                        toggleDrawer={toggleDrawer}\n                    />\n                </Toolbar>\n            </AppBar>\n        );\n    }\n}\n\nNavigator.propTypes = {\n    classes: PropTypes.object.isRequired,\n    gamesInformation: PropTypes.object.isRequired,\n    importFile: PropTypes.func.isRequired,\n    setLabelFilter: PropTypes.func.isRequired,\n    shortByName: PropTypes.func.isRequired,\n    toggleDrawer: PropTypes.func.isRequired\n};\n\nexport default withStyles(navigatorStyles)(Navigator);\n","//@vendors\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n// @font awesome\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport { faSignInAlt, faSignOutAlt, faFileImport } from '@fortawesome/free-solid-svg-icons';\n// @components\nimport SwipeableView from '../../components/tabContainer/swipeableView';\nimport Footer from '../../components/footer/footer';\nimport Navigator from '../../components/navigator/navigator';\n// @actions\nimport { importFile, initGames, loadGames, setLabelFilter, shortByName, actions as gamesActions } from '../../actions/gamesInformation';\n\nclass Home extends Component {\n    componentDidMount() {\n        library.add(fab, faSignInAlt, faSignOutAlt, faFileImport);\n    }\n\n    buildCatalog() {\n        const { gamesInformation, loadGames, initGames, setLabelFilter, setTab } = this.props;\n\n        return (\n            <React.Fragment>\n                <SwipeableView\n                    gamesInformation={gamesInformation}\n                    initGames={initGames}\n                    loadGames={loadGames}\n                    setLabelFilter={setLabelFilter}\n                    setTab={setTab}\n                />\n            </React.Fragment>\n        );\n    }\n\n    render() {\n        const { gamesInformation, importFile, setLabelFilter, shortByName, toggleDrawer } = this.props;\n\n        const catalog = this.buildCatalog();\n        return (\n            <React.Fragment>\n                <Navigator\n                    gamesInformation={gamesInformation}\n                    importFile={importFile}\n                    setLabelFilter={setLabelFilter}\n                    shortByName={shortByName}\n                    toggleDrawer={toggleDrawer}\n                />\n                {catalog}\n                <Footer />\n            </React.Fragment>\n        );\n    }\n}\n\nHome.propTypes = {\n    gamesInformation: PropTypes.object.isRequired,\n    importFile: PropTypes.func.isRequired,\n    initGames: PropTypes.func.isRequired,\n    loadGames: PropTypes.func.isRequired,\n    setLabelFilter: PropTypes.func.isRequired,\n    setTab: PropTypes.func.isRequired,\n    shortByName: PropTypes.func.isRequired,\n    toggleDrawer: PropTypes.func.isRequired\n};\n\nexport default connect(\n    state => ({\n        gamesInformation: state.gamesInformation\n    }),\n    {\n        importFile: importFile,\n        initGames: initGames,\n        loadGames: loadGames,\n        setLabelFilter: setLabelFilter,\n        setTab: gamesActions.setTab,\n        shortByName: shortByName,\n        toggleDrawer: gamesActions.toggleDrawer\n    })(Home);\n","import './App.scss';\n//@vendors\nimport React, { Component } from 'react';\nimport { hot } from 'react-hot-loader/root';\n// @routes\nimport Home from '../home/home';\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"app\">\n                <Home />\n            </div>\n        );\n    }\n}\n\nexport default hot(App);\n","import './index.scss';\nimport './rhlConfig';\n\n//@vendors\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n//@config\nimport configureStore from '../src/store/configureStore';\nimport * as serviceWorker from './serviceWorker';\n//@components\nimport App from './routes/app/App';\n\nconst store = configureStore();\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}